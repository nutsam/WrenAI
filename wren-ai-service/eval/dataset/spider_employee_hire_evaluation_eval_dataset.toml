dataset_id = "75710d98-62af-4ff1-820d-6e11c2b7c242"
date = "2025_06_11"

[mdl]
catalog = "employee_hire_evaluation"
schema = "main"
dataSource = "local_file"
views = []
metrics = []

[[mdl.models]]
name = "employee"
primaryKey = "Employee_ID"

[[mdl.models.columns]]
name = "Employee_ID"
type = "number"
notNull = false

[mdl.models.columns.properties]

[[mdl.models.columns]]
name = "Name"
type = "text"
notNull = false

[mdl.models.columns.properties]

[[mdl.models.columns]]
name = "Age"
type = "number"
notNull = false

[mdl.models.columns.properties]

[[mdl.models.columns]]
name = "City"
type = "text"
notNull = false

[mdl.models.columns.properties]

[mdl.models.properties]

[mdl.models.tableReference]
catalog = "employee_hire_evaluation"
schema = "main"
table = "employee"

[[mdl.models]]
name = "shop"
primaryKey = "Shop_ID"

[[mdl.models.columns]]
name = "Shop_ID"
type = "number"
notNull = false

[mdl.models.columns.properties]

[[mdl.models.columns]]
name = "Name"
type = "text"
notNull = false

[mdl.models.columns.properties]

[[mdl.models.columns]]
name = "Location"
type = "text"
notNull = false

[mdl.models.columns.properties]

[[mdl.models.columns]]
name = "District"
type = "text"
notNull = false

[mdl.models.columns.properties]

[[mdl.models.columns]]
name = "Number_products"
type = "number"
notNull = false

[mdl.models.columns.properties]

[[mdl.models.columns]]
name = "Manager_name"
type = "text"
notNull = false

[mdl.models.columns.properties]

[mdl.models.properties]

[mdl.models.tableReference]
catalog = "employee_hire_evaluation"
schema = "main"
table = "shop"

[[mdl.models]]
name = "hiring"
primaryKey = "Employee_ID"

[[mdl.models.columns]]
name = "Shop_ID"
type = "number"
notNull = false

[mdl.models.columns.properties]

[[mdl.models.columns]]
name = "Employee_ID"
type = "number"
notNull = false

[mdl.models.columns.properties]

[[mdl.models.columns]]
name = "Start_from"
type = "text"
notNull = false

[mdl.models.columns.properties]

[[mdl.models.columns]]
name = "Is_full_time"
type = "others"
notNull = false

[mdl.models.columns.properties]

[mdl.models.properties]

[mdl.models.tableReference]
catalog = "employee_hire_evaluation"
schema = "main"
table = "hiring"

[[mdl.models]]
name = "evaluation"
primaryKey = "Employee_ID"

[[mdl.models.columns]]
name = "Employee_ID"
type = "text"
notNull = false

[mdl.models.columns.properties]

[[mdl.models.columns]]
name = "Year_awarded"
type = "text"
notNull = false

[mdl.models.columns.properties]

[[mdl.models.columns]]
name = "Bonus"
type = "number"
notNull = false

[mdl.models.columns.properties]

[mdl.models.properties]

[mdl.models.tableReference]
catalog = "employee_hire_evaluation"
schema = "main"
table = "evaluation"

[[mdl.relationships]]
name = "hiring_Employee_ID_employee_Employee_ID"
models = ["hiring", "employee"]
joinType = "MANY_TO_MANY"
condition = "hiring.Employee_ID = employee.Employee_ID"

[[mdl.relationships]]
name = "hiring_Shop_ID_shop_Shop_ID"
models = ["hiring", "shop"]
joinType = "MANY_TO_MANY"
condition = "hiring.Shop_ID = shop.Shop_ID"

[[mdl.relationships]]
name = "evaluation_Employee_ID_employee_Employee_ID"
models = ["evaluation", "employee"]
joinType = "MANY_TO_MANY"
condition = "evaluation.Employee_ID = employee.Employee_ID"

[[eval_dataset]]
categories = []
question = "Sort employee names by their age in ascending order."
sql = "SELECT name FROM employee ORDER BY age"
context = ["employee.Age", "employee.Name"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE employee (\n  -- {\"alias\":\"\"}\n  Age number,\n  -- {\"alias\":\"\"}\n  Name text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "List the names of employees and sort in ascending order of age."
sql = "SELECT name FROM employee ORDER BY age"

[[eval_dataset.samples]]
question = "What is the number of employees from each city?"
sql = "SELECT count(*) ,  city FROM employee GROUP BY city"

[[eval_dataset.samples]]
question = "Count the number of employees for each city."
sql = "SELECT count(*) ,  city FROM employee GROUP BY city"

[[eval_dataset.samples]]
question = "Which cities do more than one employee under age 30 come from?"
sql = "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"

[[eval_dataset.samples]]
question = "Find the cities that have more than one employee under age 30."
sql = "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"

[[eval_dataset]]
categories = []
question = "List the names of employees and sort in ascending order of age."
sql = "SELECT name FROM employee ORDER BY age"
context = ["employee.Age", "employee.Name"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE employee (\n  -- {\"alias\":\"\"}\n  Age number,\n  -- {\"alias\":\"\"}\n  Name text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "What is the number of employees from each city?"
sql = "SELECT count(*) ,  city FROM employee GROUP BY city"

[[eval_dataset.samples]]
question = "Count the number of employees for each city."
sql = "SELECT count(*) ,  city FROM employee GROUP BY city"

[[eval_dataset.samples]]
question = "Which cities do more than one employee under age 30 come from?"
sql = "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"

[[eval_dataset.samples]]
question = "Find the cities that have more than one employee under age 30."
sql = "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"

[[eval_dataset.samples]]
question = "Find the number of shops in each location."
sql = "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"

[[eval_dataset]]
categories = []
question = "What is the number of employees from each city?"
sql = "SELECT count(*) ,  city FROM employee GROUP BY city"
context = ["employee.City"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE employee (\n  -- {\"alias\":\"\"}\n  City text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Count the number of employees for each city."
sql = "SELECT count(*) ,  city FROM employee GROUP BY city"

[[eval_dataset.samples]]
question = "Which cities do more than one employee under age 30 come from?"
sql = "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"

[[eval_dataset.samples]]
question = "Find the cities that have more than one employee under age 30."
sql = "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"

[[eval_dataset.samples]]
question = "Find the number of shops in each location."
sql = "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"

[[eval_dataset.samples]]
question = "How many shops are there in each location?"
sql = "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"

[[eval_dataset]]
categories = []
question = "Count the number of employees for each city."
sql = "SELECT count(*) ,  city FROM employee GROUP BY city"
context = ["employee.City"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE employee (\n  -- {\"alias\":\"\"}\n  City text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Which cities do more than one employee under age 30 come from?"
sql = "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"

[[eval_dataset.samples]]
question = "Find the cities that have more than one employee under age 30."
sql = "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"

[[eval_dataset.samples]]
question = "Find the number of shops in each location."
sql = "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"

[[eval_dataset.samples]]
question = "How many shops are there in each location?"
sql = "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"

[[eval_dataset.samples]]
question = "Find the manager name and district of the shop whose number of products is the largest."
sql = "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"

[[eval_dataset]]
categories = []
question = "Which cities do more than one employee under age 30 come from?"
sql = "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"
context = ["employee.Age", "employee.City"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE employee (\n  -- {\"alias\":\"\"}\n  Age number,\n  -- {\"alias\":\"\"}\n  City text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Find the cities that have more than one employee under age 30."
sql = "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"

[[eval_dataset.samples]]
question = "Find the number of shops in each location."
sql = "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"

[[eval_dataset.samples]]
question = "How many shops are there in each location?"
sql = "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"

[[eval_dataset.samples]]
question = "Find the manager name and district of the shop whose number of products is the largest."
sql = "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"

[[eval_dataset.samples]]
question = "What are the manager name and district of the shop that sells the largest number of products?"
sql = "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"

[[eval_dataset]]
categories = []
question = "Find the cities that have more than one employee under age 30."
sql = "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"
context = ["employee.Age", "employee.City"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE employee (\n  -- {\"alias\":\"\"}\n  Age number,\n  -- {\"alias\":\"\"}\n  City text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Find the number of shops in each location."
sql = "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"

[[eval_dataset.samples]]
question = "How many shops are there in each location?"
sql = "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"

[[eval_dataset.samples]]
question = "Find the manager name and district of the shop whose number of products is the largest."
sql = "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"

[[eval_dataset.samples]]
question = "What are the manager name and district of the shop that sells the largest number of products?"
sql = "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"

[[eval_dataset.samples]]
question = "find the minimum and maximum number of products of all stores."
sql = "SELECT min(Number_products) ,  max(Number_products) FROM shop"

[[eval_dataset]]
categories = []
question = "Find the number of shops in each location."
sql = "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"
context = ["shop.Location"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Location text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "How many shops are there in each location?"
sql = "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"

[[eval_dataset.samples]]
question = "Find the manager name and district of the shop whose number of products is the largest."
sql = "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"

[[eval_dataset.samples]]
question = "What are the manager name and district of the shop that sells the largest number of products?"
sql = "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"

[[eval_dataset.samples]]
question = "find the minimum and maximum number of products of all stores."
sql = "SELECT min(Number_products) ,  max(Number_products) FROM shop"

[[eval_dataset.samples]]
question = "What are the minimum and maximum number of products across all the shops?"
sql = "SELECT min(Number_products) ,  max(Number_products) FROM shop"

[[eval_dataset]]
categories = []
question = "How many shops are there in each location?"
sql = "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"
context = ["shop.Location"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Location text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Find the manager name and district of the shop whose number of products is the largest."
sql = "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"

[[eval_dataset.samples]]
question = "What are the manager name and district of the shop that sells the largest number of products?"
sql = "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"

[[eval_dataset.samples]]
question = "find the minimum and maximum number of products of all stores."
sql = "SELECT min(Number_products) ,  max(Number_products) FROM shop"

[[eval_dataset.samples]]
question = "What are the minimum and maximum number of products across all the shops?"
sql = "SELECT min(Number_products) ,  max(Number_products) FROM shop"

[[eval_dataset.samples]]
question = "Return the name, location and district of all shops in descending order of number of products."
sql = "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"

[[eval_dataset]]
categories = []
question = "Find the manager name and district of the shop whose number of products is the largest."
sql = "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"
context = ["shop.District", "shop.Manager_name", "shop.Number_products"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  District text,\n  -- {\"alias\":\"\"}\n  Manager_name text,\n  -- {\"alias\":\"\"}\n  Number_products number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "What are the manager name and district of the shop that sells the largest number of products?"
sql = "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"

[[eval_dataset.samples]]
question = "find the minimum and maximum number of products of all stores."
sql = "SELECT min(Number_products) ,  max(Number_products) FROM shop"

[[eval_dataset.samples]]
question = "What are the minimum and maximum number of products across all the shops?"
sql = "SELECT min(Number_products) ,  max(Number_products) FROM shop"

[[eval_dataset.samples]]
question = "Return the name, location and district of all shops in descending order of number of products."
sql = "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"

[[eval_dataset.samples]]
question = "Sort all the shops by number products in descending order, and return the name, location and district of each shop."
sql = "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"

[[eval_dataset]]
categories = []
question = "What are the manager name and district of the shop that sells the largest number of products?"
sql = "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"
context = ["shop.District", "shop.Manager_name", "shop.Number_products"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  District text,\n  -- {\"alias\":\"\"}\n  Manager_name text,\n  -- {\"alias\":\"\"}\n  Number_products number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "find the minimum and maximum number of products of all stores."
sql = "SELECT min(Number_products) ,  max(Number_products) FROM shop"

[[eval_dataset.samples]]
question = "What are the minimum and maximum number of products across all the shops?"
sql = "SELECT min(Number_products) ,  max(Number_products) FROM shop"

[[eval_dataset.samples]]
question = "Return the name, location and district of all shops in descending order of number of products."
sql = "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"

[[eval_dataset.samples]]
question = "Sort all the shops by number products in descending order, and return the name, location and district of each shop."
sql = "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"

[[eval_dataset.samples]]
question = "Find the names of stores whose number products is more than the average number of products."
sql = "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"

[[eval_dataset]]
categories = []
question = "find the minimum and maximum number of products of all stores."
sql = "SELECT min(Number_products) ,  max(Number_products) FROM shop"
context = ["shop.Number_products"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Number_products number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "What are the minimum and maximum number of products across all the shops?"
sql = "SELECT min(Number_products) ,  max(Number_products) FROM shop"

[[eval_dataset.samples]]
question = "Return the name, location and district of all shops in descending order of number of products."
sql = "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"

[[eval_dataset.samples]]
question = "Sort all the shops by number products in descending order, and return the name, location and district of each shop."
sql = "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"

[[eval_dataset.samples]]
question = "Find the names of stores whose number products is more than the average number of products."
sql = "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"

[[eval_dataset.samples]]
question = "Which shops' number products is above the average? Give me the shop names."
sql = "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"

[[eval_dataset]]
categories = []
question = "What are the minimum and maximum number of products across all the shops?"
sql = "SELECT min(Number_products) ,  max(Number_products) FROM shop"
context = ["shop.Number_products"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Number_products number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Return the name, location and district of all shops in descending order of number of products."
sql = "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"

[[eval_dataset.samples]]
question = "Sort all the shops by number products in descending order, and return the name, location and district of each shop."
sql = "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"

[[eval_dataset.samples]]
question = "Find the names of stores whose number products is more than the average number of products."
sql = "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"

[[eval_dataset.samples]]
question = "Which shops' number products is above the average? Give me the shop names."
sql = "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"

[[eval_dataset.samples]]
question = "find the name of employee who was awarded the most times in the evaluation."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset]]
categories = []
question = "Return the name, location and district of all shops in descending order of number of products."
sql = "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"
context = ["shop.District", "shop.Location", "shop.Name", "shop.Number_products"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  District text,\n  -- {\"alias\":\"\"}\n  Location text,\n  -- {\"alias\":\"\"}\n  Name text,\n  -- {\"alias\":\"\"}\n  Number_products number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Sort all the shops by number products in descending order, and return the name, location and district of each shop."
sql = "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"

[[eval_dataset.samples]]
question = "Find the names of stores whose number products is more than the average number of products."
sql = "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"

[[eval_dataset.samples]]
question = "Which shops' number products is above the average? Give me the shop names."
sql = "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"

[[eval_dataset.samples]]
question = "find the name of employee who was awarded the most times in the evaluation."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Which employee received the most awards in evaluations? Give me the employee name."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset]]
categories = []
question = "Sort all the shops by number products in descending order, and return the name, location and district of each shop."
sql = "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"
context = ["shop.District", "shop.Location", "shop.Name", "shop.Number_products"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  District text,\n  -- {\"alias\":\"\"}\n  Location text,\n  -- {\"alias\":\"\"}\n  Name text,\n  -- {\"alias\":\"\"}\n  Number_products number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Find the names of stores whose number products is more than the average number of products."
sql = "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"

[[eval_dataset.samples]]
question = "Which shops' number products is above the average? Give me the shop names."
sql = "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"

[[eval_dataset.samples]]
question = "find the name of employee who was awarded the most times in the evaluation."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Which employee received the most awards in evaluations? Give me the employee name."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Find the name of the employee who got the highest one time bonus."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"

[[eval_dataset]]
categories = []
question = "Find the names of stores whose number products is more than the average number of products."
sql = "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"
context = ["shop.Name", "shop.Number_products"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Name text,\n  -- {\"alias\":\"\"}\n  Number_products number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Which shops' number products is above the average? Give me the shop names."
sql = "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"

[[eval_dataset.samples]]
question = "find the name of employee who was awarded the most times in the evaluation."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Which employee received the most awards in evaluations? Give me the employee name."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Find the name of the employee who got the highest one time bonus."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Which employee received the biggest bonus? Give me the employee name."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"

[[eval_dataset]]
categories = []
question = "Which shops' number products is above the average? Give me the shop names."
sql = "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"
context = ["shop.Name", "shop.Number_products"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Name text,\n  -- {\"alias\":\"\"}\n  Number_products number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "find the name of employee who was awarded the most times in the evaluation."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Which employee received the most awards in evaluations? Give me the employee name."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Find the name of the employee who got the highest one time bonus."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Which employee received the biggest bonus? Give me the employee name."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Find the names of employees who never won any award in the evaluation."
sql = "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"

[[eval_dataset]]
categories = []
question = "find the name of employee who was awarded the most times in the evaluation."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"
context = ["employee.Employee_ID", "employee.Name", "evaluation.Employee_ID"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE employee (\n  -- {\"alias\":\"\"}\n  Employee_ID number PRIMARY KEY,\n  -- {\"alias\":\"\"}\n  Name text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.document]]
id = "1"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE evaluation (\n  -- {\"alias\":\"\"}\n  Employee_ID text PRIMARY KEY\n);"

[eval_dataset.document.meta]
id = "1"

[[eval_dataset.samples]]
question = "Which employee received the most awards in evaluations? Give me the employee name."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Find the name of the employee who got the highest one time bonus."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Which employee received the biggest bonus? Give me the employee name."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Find the names of employees who never won any award in the evaluation."
sql = "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"

[[eval_dataset.samples]]
question = "What are the names of the employees who never received any evaluation?"
sql = "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"

[[eval_dataset]]
categories = []
question = "Which employee received the most awards in evaluations? Give me the employee name."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"
context = ["employee.Employee_ID", "employee.Name", "evaluation.Employee_ID"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE employee (\n  -- {\"alias\":\"\"}\n  Employee_ID number PRIMARY KEY,\n  -- {\"alias\":\"\"}\n  Name text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.document]]
id = "1"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE evaluation (\n  -- {\"alias\":\"\"}\n  Employee_ID text PRIMARY KEY\n);"

[eval_dataset.document.meta]
id = "1"

[[eval_dataset.samples]]
question = "Find the name of the employee who got the highest one time bonus."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Which employee received the biggest bonus? Give me the employee name."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Find the names of employees who never won any award in the evaluation."
sql = "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"

[[eval_dataset.samples]]
question = "What are the names of the employees who never received any evaluation?"
sql = "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"

[[eval_dataset.samples]]
question = "What is the name of the shop that is hiring the largest number of employees?"
sql = "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset]]
categories = []
question = "Find the name of the employee who got the highest one time bonus."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"
context = ["employee.Employee_ID", "employee.Name", "evaluation.Bonus", "evaluation.Employee_ID"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE employee (\n  -- {\"alias\":\"\"}\n  Employee_ID number PRIMARY KEY,\n  -- {\"alias\":\"\"}\n  Name text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.document]]
id = "1"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE evaluation (\n  -- {\"alias\":\"\"}\n  Bonus number,\n  -- {\"alias\":\"\"}\n  Employee_ID text PRIMARY KEY\n);"

[eval_dataset.document.meta]
id = "1"

[[eval_dataset.samples]]
question = "Which employee received the biggest bonus? Give me the employee name."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Find the names of employees who never won any award in the evaluation."
sql = "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"

[[eval_dataset.samples]]
question = "What are the names of the employees who never received any evaluation?"
sql = "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"

[[eval_dataset.samples]]
question = "What is the name of the shop that is hiring the largest number of employees?"
sql = "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Which shop has the most employees? Give me the shop name."
sql = "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset]]
categories = []
question = "Which employee received the biggest bonus? Give me the employee name."
sql = "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"
context = ["employee.Employee_ID", "employee.Name", "evaluation.Bonus", "evaluation.Employee_ID"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE employee (\n  -- {\"alias\":\"\"}\n  Employee_ID number PRIMARY KEY,\n  -- {\"alias\":\"\"}\n  Name text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.document]]
id = "1"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE evaluation (\n  -- {\"alias\":\"\"}\n  Bonus number,\n  -- {\"alias\":\"\"}\n  Employee_ID text PRIMARY KEY\n);"

[eval_dataset.document.meta]
id = "1"

[[eval_dataset.samples]]
question = "Find the names of employees who never won any award in the evaluation."
sql = "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"

[[eval_dataset.samples]]
question = "What are the names of the employees who never received any evaluation?"
sql = "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"

[[eval_dataset.samples]]
question = "What is the name of the shop that is hiring the largest number of employees?"
sql = "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Which shop has the most employees? Give me the shop name."
sql = "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Find the name of the shops that do not hire any employee."
sql = "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"

[[eval_dataset]]
categories = []
question = "Find the names of employees who never won any award in the evaluation."
sql = "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"
context = ["employee.Employee_ID", "employee.Name"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE employee (\n  -- {\"alias\":\"\"}\n  Employee_ID number PRIMARY KEY,\n  -- {\"alias\":\"\"}\n  Name text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "What are the names of the employees who never received any evaluation?"
sql = "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"

[[eval_dataset.samples]]
question = "What is the name of the shop that is hiring the largest number of employees?"
sql = "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Which shop has the most employees? Give me the shop name."
sql = "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Find the name of the shops that do not hire any employee."
sql = "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"

[[eval_dataset.samples]]
question = "Which shops run with no employees? Find the shop names"
sql = "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"

[[eval_dataset]]
categories = []
question = "What are the names of the employees who never received any evaluation?"
sql = "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"
context = ["employee.Employee_ID", "employee.Name"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE employee (\n  -- {\"alias\":\"\"}\n  Employee_ID number PRIMARY KEY,\n  -- {\"alias\":\"\"}\n  Name text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "What is the name of the shop that is hiring the largest number of employees?"
sql = "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Which shop has the most employees? Give me the shop name."
sql = "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Find the name of the shops that do not hire any employee."
sql = "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"

[[eval_dataset.samples]]
question = "Which shops run with no employees? Find the shop names"
sql = "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"

[[eval_dataset.samples]]
question = "Find the number of employees hired in each shop; show the shop name as well."
sql = "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"

[[eval_dataset]]
categories = []
question = "What is the name of the shop that is hiring the largest number of employees?"
sql = "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"
context = ["hiring.Shop_ID", "shop.Name", "shop.Shop_ID"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE hiring (\n  -- {\"alias\":\"\"}\n  Shop_ID number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.document]]
id = "1"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Name text,\n  -- {\"alias\":\"\"}\n  Shop_ID number PRIMARY KEY\n);"

[eval_dataset.document.meta]
id = "1"

[[eval_dataset.samples]]
question = "Which shop has the most employees? Give me the shop name."
sql = "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"

[[eval_dataset.samples]]
question = "Find the name of the shops that do not hire any employee."
sql = "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"

[[eval_dataset.samples]]
question = "Which shops run with no employees? Find the shop names"
sql = "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"

[[eval_dataset.samples]]
question = "Find the number of employees hired in each shop; show the shop name as well."
sql = "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"

[[eval_dataset.samples]]
question = "For each shop, return the number of employees working there and the name of the shop."
sql = "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"

[[eval_dataset]]
categories = []
question = "Which shop has the most employees? Give me the shop name."
sql = "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"
context = ["hiring.Shop_ID", "shop.Name", "shop.Shop_ID"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE hiring (\n  -- {\"alias\":\"\"}\n  Shop_ID number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.document]]
id = "1"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Name text,\n  -- {\"alias\":\"\"}\n  Shop_ID number PRIMARY KEY\n);"

[eval_dataset.document.meta]
id = "1"

[[eval_dataset.samples]]
question = "Find the name of the shops that do not hire any employee."
sql = "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"

[[eval_dataset.samples]]
question = "Which shops run with no employees? Find the shop names"
sql = "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"

[[eval_dataset.samples]]
question = "Find the number of employees hired in each shop; show the shop name as well."
sql = "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"

[[eval_dataset.samples]]
question = "For each shop, return the number of employees working there and the name of the shop."
sql = "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"

[[eval_dataset.samples]]
question = "What is total bonus given in all evaluations?"
sql = "SELECT sum(bonus) FROM evaluation"

[[eval_dataset]]
categories = []
question = "Find the name of the shops that do not hire any employee."
sql = "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"
context = ["shop.Name", "shop.Shop_ID"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Name text,\n  -- {\"alias\":\"\"}\n  Shop_ID number PRIMARY KEY\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Which shops run with no employees? Find the shop names"
sql = "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"

[[eval_dataset.samples]]
question = "Find the number of employees hired in each shop; show the shop name as well."
sql = "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"

[[eval_dataset.samples]]
question = "For each shop, return the number of employees working there and the name of the shop."
sql = "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"

[[eval_dataset.samples]]
question = "What is total bonus given in all evaluations?"
sql = "SELECT sum(bonus) FROM evaluation"

[[eval_dataset.samples]]
question = "Find the total amount of bonus given in all the evaluations."
sql = "SELECT sum(bonus) FROM evaluation"

[[eval_dataset]]
categories = []
question = "Which shops run with no employees? Find the shop names"
sql = "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"
context = ["shop.Name", "shop.Shop_ID"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Name text,\n  -- {\"alias\":\"\"}\n  Shop_ID number PRIMARY KEY\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Find the number of employees hired in each shop; show the shop name as well."
sql = "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"

[[eval_dataset.samples]]
question = "For each shop, return the number of employees working there and the name of the shop."
sql = "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"

[[eval_dataset.samples]]
question = "What is total bonus given in all evaluations?"
sql = "SELECT sum(bonus) FROM evaluation"

[[eval_dataset.samples]]
question = "Find the total amount of bonus given in all the evaluations."
sql = "SELECT sum(bonus) FROM evaluation"

[[eval_dataset.samples]]
question = "Give me all the information about hiring."
sql = "SELECT * FROM hiring"

[[eval_dataset]]
categories = []
question = "Find the number of employees hired in each shop; show the shop name as well."
sql = "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"
context = ["hiring.Shop_ID", "shop.Name", "shop.Shop_ID"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE hiring (\n  -- {\"alias\":\"\"}\n  Shop_ID number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.document]]
id = "1"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Name text,\n  -- {\"alias\":\"\"}\n  Shop_ID number PRIMARY KEY\n);"

[eval_dataset.document.meta]
id = "1"

[[eval_dataset.samples]]
question = "For each shop, return the number of employees working there and the name of the shop."
sql = "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"

[[eval_dataset.samples]]
question = "What is total bonus given in all evaluations?"
sql = "SELECT sum(bonus) FROM evaluation"

[[eval_dataset.samples]]
question = "Find the total amount of bonus given in all the evaluations."
sql = "SELECT sum(bonus) FROM evaluation"

[[eval_dataset.samples]]
question = "Give me all the information about hiring."
sql = "SELECT * FROM hiring"

[[eval_dataset.samples]]
question = "What is all the information about hiring?"
sql = "SELECT * FROM hiring"

[[eval_dataset]]
categories = []
question = "For each shop, return the number of employees working there and the name of the shop."
sql = "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"
context = ["hiring.Shop_ID", "shop.Name", "shop.Shop_ID"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE hiring (\n  -- {\"alias\":\"\"}\n  Shop_ID number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.document]]
id = "1"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Name text,\n  -- {\"alias\":\"\"}\n  Shop_ID number PRIMARY KEY\n);"

[eval_dataset.document.meta]
id = "1"

[[eval_dataset.samples]]
question = "What is total bonus given in all evaluations?"
sql = "SELECT sum(bonus) FROM evaluation"

[[eval_dataset.samples]]
question = "Find the total amount of bonus given in all the evaluations."
sql = "SELECT sum(bonus) FROM evaluation"

[[eval_dataset.samples]]
question = "Give me all the information about hiring."
sql = "SELECT * FROM hiring"

[[eval_dataset.samples]]
question = "What is all the information about hiring?"
sql = "SELECT * FROM hiring"

[[eval_dataset.samples]]
question = "Which district has both stores with less than 3000 products and stores with more than 10000 products?"
sql = "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"

[[eval_dataset]]
categories = []
question = "What is total bonus given in all evaluations?"
sql = "SELECT sum(bonus) FROM evaluation"
context = ["evaluation.Bonus"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE evaluation (\n  -- {\"alias\":\"\"}\n  Bonus number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Find the total amount of bonus given in all the evaluations."
sql = "SELECT sum(bonus) FROM evaluation"

[[eval_dataset.samples]]
question = "Give me all the information about hiring."
sql = "SELECT * FROM hiring"

[[eval_dataset.samples]]
question = "What is all the information about hiring?"
sql = "SELECT * FROM hiring"

[[eval_dataset.samples]]
question = "Which district has both stores with less than 3000 products and stores with more than 10000 products?"
sql = "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"

[[eval_dataset.samples]]
question = "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products."
sql = "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"

[[eval_dataset]]
categories = []
question = "Find the total amount of bonus given in all the evaluations."
sql = "SELECT sum(bonus) FROM evaluation"
context = ["evaluation.Bonus"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE evaluation (\n  -- {\"alias\":\"\"}\n  Bonus number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Give me all the information about hiring."
sql = "SELECT * FROM hiring"

[[eval_dataset.samples]]
question = "What is all the information about hiring?"
sql = "SELECT * FROM hiring"

[[eval_dataset.samples]]
question = "Which district has both stores with less than 3000 products and stores with more than 10000 products?"
sql = "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"

[[eval_dataset.samples]]
question = "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products."
sql = "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"

[[eval_dataset.samples]]
question = "How many different store locations are there?"
sql = "SELECT count(DISTINCT LOCATION) FROM shop"

[[eval_dataset]]
categories = []
question = "Give me all the information about hiring."
sql = "SELECT * FROM hiring"
context = ["hiring.Employee_ID", "hiring.Is_full_time", "hiring.Shop_ID", "hiring.Start_from"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE hiring (\n  -- {\"alias\":\"\"}\n  Employee_ID number PRIMARY KEY,\n  -- {\"alias\":\"\"}\n  Is_full_time others,\n  -- {\"alias\":\"\"}\n  Shop_ID number,\n  -- {\"alias\":\"\"}\n  Start_from text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "What is all the information about hiring?"
sql = "SELECT * FROM hiring"

[[eval_dataset.samples]]
question = "Which district has both stores with less than 3000 products and stores with more than 10000 products?"
sql = "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"

[[eval_dataset.samples]]
question = "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products."
sql = "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"

[[eval_dataset.samples]]
question = "How many different store locations are there?"
sql = "SELECT count(DISTINCT LOCATION) FROM shop"

[[eval_dataset.samples]]
question = "Count the number of distinct store locations."
sql = "SELECT count(DISTINCT LOCATION) FROM shop"

[[eval_dataset]]
categories = []
question = "What is all the information about hiring?"
sql = "SELECT * FROM hiring"
context = ["hiring.Employee_ID", "hiring.Is_full_time", "hiring.Shop_ID", "hiring.Start_from"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE hiring (\n  -- {\"alias\":\"\"}\n  Employee_ID number PRIMARY KEY,\n  -- {\"alias\":\"\"}\n  Is_full_time others,\n  -- {\"alias\":\"\"}\n  Shop_ID number,\n  -- {\"alias\":\"\"}\n  Start_from text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Which district has both stores with less than 3000 products and stores with more than 10000 products?"
sql = "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"

[[eval_dataset.samples]]
question = "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products."
sql = "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"

[[eval_dataset.samples]]
question = "How many different store locations are there?"
sql = "SELECT count(DISTINCT LOCATION) FROM shop"

[[eval_dataset.samples]]
question = "Count the number of distinct store locations."
sql = "SELECT count(DISTINCT LOCATION) FROM shop"

[[eval_dataset.samples]]
question = "How many employees are there?"
sql = "SELECT count(*) FROM employee"

[[eval_dataset]]
categories = []
question = "Which district has both stores with less than 3000 products and stores with more than 10000 products?"
sql = "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"
context = ["shop.District", "shop.Number_products"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  District text,\n  -- {\"alias\":\"\"}\n  Number_products number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products."
sql = "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"

[[eval_dataset.samples]]
question = "How many different store locations are there?"
sql = "SELECT count(DISTINCT LOCATION) FROM shop"

[[eval_dataset.samples]]
question = "Count the number of distinct store locations."
sql = "SELECT count(DISTINCT LOCATION) FROM shop"

[[eval_dataset.samples]]
question = "How many employees are there?"
sql = "SELECT count(*) FROM employee"

[[eval_dataset.samples]]
question = "Count the number of employees"
sql = "SELECT count(*) FROM employee"

[[eval_dataset]]
categories = []
question = "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products."
sql = "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"
context = ["shop.District", "shop.Number_products"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  District text,\n  -- {\"alias\":\"\"}\n  Number_products number\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "How many different store locations are there?"
sql = "SELECT count(DISTINCT LOCATION) FROM shop"

[[eval_dataset.samples]]
question = "Count the number of distinct store locations."
sql = "SELECT count(DISTINCT LOCATION) FROM shop"

[[eval_dataset.samples]]
question = "How many employees are there?"
sql = "SELECT count(*) FROM employee"

[[eval_dataset.samples]]
question = "Count the number of employees"
sql = "SELECT count(*) FROM employee"

[[eval_dataset.samples]]
question = "Sort employee names by their age in ascending order."
sql = "SELECT name FROM employee ORDER BY age"

[[eval_dataset]]
categories = []
question = "How many different store locations are there?"
sql = "SELECT count(DISTINCT LOCATION) FROM shop"
context = ["shop.Location"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Location text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "Count the number of distinct store locations."
sql = "SELECT count(DISTINCT LOCATION) FROM shop"

[[eval_dataset.samples]]
question = "How many employees are there?"
sql = "SELECT count(*) FROM employee"

[[eval_dataset.samples]]
question = "Count the number of employees"
sql = "SELECT count(*) FROM employee"

[[eval_dataset.samples]]
question = "Sort employee names by their age in ascending order."
sql = "SELECT name FROM employee ORDER BY age"

[[eval_dataset.samples]]
question = "List the names of employees and sort in ascending order of age."
sql = "SELECT name FROM employee ORDER BY age"

[[eval_dataset]]
categories = []
question = "Count the number of distinct store locations."
sql = "SELECT count(DISTINCT LOCATION) FROM shop"
context = ["shop.Location"]
instructions = [""]

[[eval_dataset.document]]
id = "0"
content = "\n/* {\"alias\":\"\"} */\nCREATE TABLE shop (\n  -- {\"alias\":\"\"}\n  Location text\n);"

[eval_dataset.document.meta]
id = "0"

[[eval_dataset.samples]]
question = "How many employees are there?"
sql = "SELECT count(*) FROM employee"

[[eval_dataset.samples]]
question = "Count the number of employees"
sql = "SELECT count(*) FROM employee"

[[eval_dataset.samples]]
question = "Sort employee names by their age in ascending order."
sql = "SELECT name FROM employee ORDER BY age"

[[eval_dataset.samples]]
question = "List the names of employees and sort in ascending order of age."
sql = "SELECT name FROM employee ORDER BY age"

[[eval_dataset.samples]]
question = "What is the number of employees from each city?"
sql = "SELECT count(*) ,  city FROM employee GROUP BY city"
